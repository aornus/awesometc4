print(.libPaths())
getwd()
demo = 5 + (2.3 - 1.125)*3.2/1.1 + 1.23E3
demo
2^5
round(1.1234, 2)
pi
sin(pi/6)
dnorm(2)
print( 5 + (2.3 - 1.125)*3.2/1.1 + 1.23E3)
## [1] 1238.418
cat("sin(pi/2)=", sin(pi/2), "\n")
## sin(pi/2)= 1
## sin(pi/2)= 1
## sin(pi/2)= 1
## sin(pi/2)= 1
## [1] 1238.418
cat("sin(pi/2)=", sin(pi/3), "\n")
## [1] 1238.418
cat("log10(2)==", log10(2), "\n")
x1 <- 1:12
print(x1)
##绘图
curve(x^2, -12, 12)
##绘图
curve(x^4, -12, 12)
##绘图
curve(x^8, -12, 12)
curve(sin(x), 0, 2*pi)
abline(h=0)
##绘图
curve(x^8, -12, 12)
abline(h=0)
curve(sin(x), 0, 2*pi)
abline(h=0)
### 条形图
barplot(c("男生"=10, "女生"=7),
main="男女生人数")
### plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值
# 第二个自变量是对应的纵坐标值。
plot(1:10, sqrt(1:10))
demo("graphics")
### plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值
# 第二个自变量是对应的纵坐标值。
exps <- c(-2,-1,0,1,2)
plot(c(-2,-1,0,1,2), exp(exps))
### plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值
# 第二个自变量是对应的纵坐标值。
exps <- c(-2:10)
### plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值
# 第二个自变量是对应的纵坐标值。
exps <- c(-2:2,0.5)
### plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值
# 第二个自变量是对应的纵坐标值。
exps <- c(-2:2)
plot(c(-2,-1,0,1,2), exp(exps))
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
curve(sin(x), 0, 2*pi)
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
res1 <- table(d.cancer[,'sex']); print(res1)
install.packages("readr")
library(readr)
## 基本绘图
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
View(d.cancer)
res1 <- table(d.cancer[,'sex']); print(res1)
View(d.cancer)
barplot(res1)
barplot(res1, main="性别分布",
col=c("brown2", "aquamarine1"))
barplot(res1, main="性别分布",
col=c("brown1", "aquamarine1"))
barplot(res1, main="性别分布",
col=c("brown1", "blue2"))
head(colors(), 6)
select.colors <- function(){
nc <- length(colors())
x <- rep(seq(26), 26)[1:nc]
y <- rep(seq(26), each=26)[1:nc]
cols <- colors()
plot(x, y, type="p", pch=16, cex=2,
col=cols)
res <- cols[identify(x,y, labels=cols)]
res
}
select.colors <- function(){
nc <- length(colors())
x <- rep(seq(26), 26)[1:nc]
y <- rep(seq(26), each=26)[1:nc]
cols <- colors()
plot(x, y, type="p", pch=16, cex=2,
col=cols)
res <- cols[identify(x,y, labels=cols)]
res
}
barplot(res1, width=0.5, xlim=c(-3, 5),
main="性别分布",
col=c("brown2", "aquamarine1"))
lines(tmp.dens, lwd=2, col='blue')
tmp.dens <- density(x)
print(round(x,2))
x <- rnorm(30, mean=100, sd=1)
print(round(x,2))
lines(tmp.dens, lwd=2, col='blue')
tmp.dens <- density(x)
hist(x, freq=FALSE,
ylim=c(0,max(tmp.dens$y)),
col=rainbow(15),
main='正态随机数',
xlab='', ylab='频数')
lines(tmp.dens, lwd=2, col='blue')
image(x, y, z)
h=100)
x <- seq(-3,3, length=100)
y <- x
f <- function(x,y,ssq1=1, ssq2=2, rho=0.5){
det1 <- ssq1*ssq2*(1 - rho^2)
s1 <- sqrt(ssq1)
s2 <- sqrt(ssq2)
1/(2*pi*sqrt(det1)) * exp(-0.5 / det1 * (
ssq2*x^2 + ssq1*y^2 - 2*rho*s1*s2*x*y))
}
z <- outer(x, y, f)
image(x, y, z)
clear
clear()
install.packages("DoE.base")
library(DoE.base)
detach("package:grid", unload = TRUE)
library(grid, lib.loc = "C:/Program Files/R/R-4.2.3/library")
design1 <- oa.design(L9.3.4)
design1 <- oa.design(L9.3.5)
design1 <- oa.design(L9.3.5)
design1 <- oa.design(L9.3.4)
design1 <- oa.design(L8.2.7)
View(design1)
View(design1)
design1 <- oa.design(L10.2.7)
design1 <- oa.design(L9.3.4)
View(design1)
design1 <- oa.design(L9.3.3)
design1 <- oa.design(L9.3.3)
design1 <- oa.design(L4.2.3)
design1 <- oa.design(L4.3.3)
design1 <- oa.design(L9.3.3)
design1 <- oa.design(L9.3.4)
View(design1)
View(design1)
