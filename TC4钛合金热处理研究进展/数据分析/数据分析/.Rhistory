if (file_test("-f", file.path(p, "Rdata.zip"))) {
warning("zipped data found for package ", sQuote(basename(dirname(p))),
".\nThat is defunct, so please re-install the package.",
domain = NA)
if (file_test("-f", fp <- file.path(p, "filelist")))
files <- file.path(p, scan(fp, what = "",
quiet = TRUE))
else {
warning(gettextf("file 'filelist' is missing for directory %s",
sQuote(p)), domain = NA)
next
}
}
else {
files <- list.files(p, full.names = TRUE)
}
files <- files[grep(name, files, fixed = TRUE)]
if (length(files) > 1L) {
o <- match(fileExt(files), dataExts, nomatch = 100L)
paths0 <- dirname(files)
paths0 <- factor(paths0, levels = unique(paths0))
files <- files[order(paths0, o)]
}
if (length(files)) {
for (file in files) {
if (verbose)
message("name=", name, ":\t file= ...",
.Platform$file.sep, basename(file), "::\t",
appendLF = FALSE, domain = NA)
ext <- fileExt(file)
if (basename(file) != paste0(name, ".", ext))
found <- FALSE
else {
found <- TRUE
zfile <- file
zipname <- file.path(dirname(file), "Rdata.zip")
if (file.exists(zipname)) {
Rdatadir <- tempfile("Rdata")
dir.create(Rdatadir, showWarnings = FALSE)
topic <- basename(file)
rc <- .External(C_unzip, zipname, topic,
Rdatadir, FALSE, TRUE, FALSE, FALSE)
if (rc == 0L)
zfile <- file.path(Rdatadir, topic)
}
if (zfile != file)
on.exit(unlink(zfile))
switch(ext, R = , r = {
library("utils")
sys.source(zfile, chdir = TRUE, envir = tmp_env)
}, RData = , rdata = , rda = load(zfile,
envir = tmp_env), TXT = , txt = , tab = ,
tab.gz = , tab.bz2 = , tab.xz = , txt.gz = ,
txt.bz2 = , txt.xz = assign(name, my_read_table(zfile,
header = TRUE, as.is = FALSE), envir = tmp_env),
CSV = , csv = , csv.gz = , csv.bz2 = ,
csv.xz = assign(name, my_read_table(zfile,
header = TRUE, sep = ";", as.is = FALSE),
envir = tmp_env), found <- FALSE)
}
if (found)
break
}
if (verbose)
message(if (!found)
"*NOT* ", "found", domain = NA)
}
if (found)
break
}
if (!found) {
warning(gettextf("data set %s not found", sQuote(name)),
domain = NA)
}
else if (!overwrite) {
for (o in ls(envir = tmp_env, all.names = TRUE)) {
if (exists(o, envir = envir, inherits = FALSE))
warning(gettextf("an object named %s already exists and will not be overwritten",
sQuote(o)))
else assign(o, get(o, envir = tmp_env, inherits = FALSE),
envir = envir)
}
rm(tmp_env)
}
}
invisible(names)
}
# 读取数据文件
data <- read.csv("puredata.csv", header = TRUE)
# 查看数据摘要
summary(data)
# 加载神经网络包
library(neuralnet)
# 将数据标准化
data_scaled <- as.data.frame(scale(data))
View(data)
View(data)
library(readr)
puredata <- read_csv("puredata.CSV")
View(puredata)
library(readr)
puredata <- read_csv("puredata.CSV")
View(puredata)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "z1",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
install.packages("scatter3D")
install.packages("plot3D")
library(plot3D)
detach("package:plot3D", unload = TRUE)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "z1",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
install.packages("scatterplot3d")
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "z1",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
library(misc3d)
library(plot3D)
library(scatterplot3d)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "z1",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = x, y = y, z = zb,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "z1",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "zb",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "zb",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "zb",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
library(scatterplot3d)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "zb",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
library(grid, lib.loc = "C:/Program Files/R/R-4.2.3/library")
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1)) #改版画布版式大小
with(iris, scatter3D(x = Sepal.Length, y = Sepal.Width, z = Petal.Length,
pch = 21, cex = 1.5,col="black",bg="#F57446",
xlab = "x",
ylab = "y",
zlab = "zb",
ticktype = "detailed",bty = "f",box = TRUE,
theta = 60, phi = 20, d=3,
colkey = FALSE)
)
---
title: "可视化·基本图标"
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(pressure)
(2023+4+24-9)/36
(2023+4+24-9)*36/51
甲=(2023+4+24-9)*36/51
x=(2023+4+24-9)*36/51
“甲”=(2023+4+24-9)*36/51
"甲"=(2023+4+24-9)*36/51
cat("甲","乙")
s2=log10(101)
s44=sqrt(s4)
s1=(2023+4+24-9)*36/51
s2=log10(101)
s3=sin(pi/6)
s4=2023^2
s44=sqrt(s4)
cat(s1,s2,s3,s4,s44)
cat("s1=",s1,s2,s3,s4,s44)
cat("s1=",s1,"s2=",s2,s3,s4,s44)
cat("s1=",s1,"❀","s2=",s2,s3,s4,s44)
cat("s1=",s1,"‖","s2=",s2,"‖","s3=",s3,"‖","s4=",s4,"‖","s44=",s44)
#R语言中的一些命令与linux很相似，比如cat
cat("s1=",s1,"‖","s2=",s2,"‖","s3=",s3,"‖","s4=",s4,"‖","s44=",s44)
dnorm(2.71828)
dnorm(0)
dnorm(-1)
dnorm(-10)
dnorm(-5)
dnorm(-4)
dnorm(-3)
dnorm(-2)
dnorm(-1)
dnorm(-1.5)
dnorm(-2)
dnorm(0)
dnorm(1.96)
dnorm(-2)
dnorm(10)
dnorm(1)
dnorm(2)
dnorm(0.5)
dnorm(0.2)
dnorm(0.45)
dnorm(0.30)
dnorm(0.2)
dnorm(0.1)
dnorm(0.01)
dnorm(0.00001)
dnorm(-0.1)
dnorm(0.08)
dnorm(1.98)
2*dnorm(1.98)
dnorm(1.98)
1-dnorm(1.98)
一门语言最基本的就是函数了，R语言内置了许多数学函数，可以很方便的进行调用运算,比如标准正态分布$N(0,1)$的概率密度函数。
一门语言最基本的就是函数了，R语言内置了许多数学函数，可以很方便的进行调用运算,比如标准正态分布$N(0,1)$的概率密度函数。
1-dnorm(1.98)
pnorm(1.98)
1-dnorm(1.98)
pnorm(1.98)
frat <- function(x){
(1 + x + 2*x^2)/(1 + 3*x + 2*x^2 + x^3)
}
flat(5)
frat <- function(x){
(1 + x + 2*x^2)/(1 + 3*x + 2*x^2 + x^3)
}
flat(5)
frat <- function(x){
(1 + x + 2*x^2)/(1 + 3*x + 2*x^2 + x^3)
}
flat(5)
frat <- function(x){
(1 + x + 2*x^2)/(1 + 3*x + 2*x^2 + x^3)
}
frat(5)
f <- \(x,y) x*y
f(2,6)
f <- \(x,y) x*e^{cos(y)}+(x^2)/2
f(0,1)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
f(0,1)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
f(2,0)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
f(2,pi/2)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2)
# 再求下题目中要求的函数的极值：
f(-exp(1),2pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2)
# 再求下题目中要求的函数的极值：
f((-exp(1)),2pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2)
# 再求下题目中要求的函数的极值：
f(-exp(1),2*pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2) |> cat()
# 再求下题目中要求的函数的极值：
cat("极小值为：", f(-exp(1),2*pi))
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2) |> cat("f(2,90°)为：")
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
# 简答计算一下x=2，y=90°时的值：
f(2,pi/2) |> cat("f(2,90°)为：")
# 再求下题目中要求的函数的极值：
cat("极小值为：", f(-exp(1),2*pi))
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(x,y)=",f(x,y))
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值为：", f(-exp(1),2*pi))
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(","x",",y,")=",f(x,y))
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值为：", f(-exp(1),2*pi))
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x",",y,")=",f(x,y))
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y))
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值为：", f(-exp(1),2*pi))
# 再求下题目中要求的函数的极值：
cat("极小值:", show(-exp(1),2*pi))
# 再求下题目中要求的函数的极值：
show(-exp(1),2*pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值为：")
show(-exp(1),2*pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值为")
show(-exp(1),2*pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值:")
show(-exp(1),2*pi)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值:")
show(-exp(1),2*pi)
knitr::opts_chunk$set(echo = TRUE)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值:")
show(-exp(1),2*pi)
s1 = (2023+4+24-9)*36/51
s2 <- log10(101)
s3 = sin(pi/6)
s4 = 2023^2
s44 = sqrt(s4)
#R语言中的一些命令与linux很相似，比如cat
cat("s1=",s1,"‖","s2=",s2,"‖","s3=",s3,"‖","s4=",s4,"‖","s44=",s44)
marks <- c(10, 6, 4, 7, 8)
x <- c(1:3, 10:13)
x1 <- c(1, 2)
x2 <- c(3, 4)
x <- c(x1, x2)
x
marks <- c(10, 6, 4, 7, 8)
x <- c(1:3, 10:13)
x1 <- c(1, 2)
x2 <- c(3, 4)
x3 <- c(x1, x2)
x
rabbit <- c(21:23,1,5,9,7)
rabbit <- c(21:23,1,5,9,7)
rabbit
cat(rabbit)
cat("rabbit:",rabbit)
seq(400,1200, by=50)
cat("rabbit1:",rabbit1)
rabbit1 <- c(21:23,1,5,9,7)
cat("rabbit1:",rabbit1)
rabbit2=seq(400,1200, by=50)
cat("rabbit2:",rabbit2)
rabbit3=seq(400,1200, length.out=9)
cat("rabbit3:",rabbit3)
rabbit3=seq(400,1200, length.out=13)
cat("rabbit3:",rabbit3)
rep(6,10)
cat("rabbit6:",rabbit6)
rabbit6 = rep(6,10)
cat("rabbit6:",rabbit6)
rabbit1 <- c(21:23,1,5,9,7)
cat("rabbit1:",rabbit1)
rabbit2=seq(400,1200, by=50)
cat("rabbit2:",rabbit2)
rabbit3=seq(400,1200, length.out=13)
cat("rabbit3:",rabbit3)
rabbit6 = rep(6,10)
cat("rabbit6:",rabbit6)
s1 = (2023+4+24-9)*36/51
s2 <- log10(101)
s3 = sin(pi/6)
s4 = 2023^2
s44 = sqrt(s4)
#R语言中的一些命令与linux很相似，比如cat
cat("s1=",s1,"‖","s2=",s2,"‖","s3=",s3,"‖","s4=",s4,"‖","s44=",s44)
1-dnorm(1.98)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值:")
show(-exp(1),2*pi)
knitr::opts_chunk$set(echo = TRUE)
f <- \(x,y) x*(exp(1))^{cos(y)}+(x^2)/2
show <- \(x,y) cat("f(",x,",",y,")=",f(x,y),"\n")
# 简答计算一下x=2，y=90°时的值：
show(2,pi/2)
# 再求下题目中要求的函数的极值：
cat("极小值:")
show(-exp(1),2*pi)
knitr::opts_chunk$set(echo = TRUE)
rabbit1 <- c(21:23,1,5,9,7)
cat("rabbit1:",rabbit1,"\n")
rabbit2=seq(400,1200, by=50)
cat("rabbit2:",rabbit2,"\n")
rabbit3=seq(400,1200, length.out=13)
cat("rabbit3:",rabbit3,"\n")
rabbit6 = rep(6,10)
cat("rabbit6:",rabbit6)
s1 = (2023+4+24-9)*36/51
s2 <- log10(101)
s3 = sin(pi/6)
s4 = 2023^2
s44 = sqrt(s4)
#R语言中的一些命令与linux很相似，比如cat
cat("s1=",s1,"‖","s2=",s2,"‖","s3=",s3,"‖","s4=",s4,"‖","s44=",s44)
1-dnorm(1.98)
library(echarts4r)
install.packages("echarts4r")
library(echarts4r)
df <- data.frame(
x = seq(50),
y = rnorm(50, 10, 3),
z = rnorm(50, 11, 2),
w = rnorm(50, 9, 2)
)
df |>
e_charts(x) |>
e_line(z) |>
e_area(w) |>
e_title("Line and area charts")
library(echarts4r)
df <- data.frame(
x = seq(50),
y = rnorm(50, 10, 3),
z = rnorm(50, 11, 2),
w = rnorm(50, 9, 2)
)
df |>
e_charts(x) |>
e_line(z) |>
e_area(w) |>
e_title("Line and area charts")
install.packages("blogdown")
blogdown::install_hugo()
